{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs30 \cf0 Documentation: ConsensusNetworks\
\
Path: BrainProject_2016/Discretization/consensusNetworkScripts\
\
\
\
LinCombAUCACC.Rmd: Using the AUC and ACC for every reverse-engineering method, this script creates one score per method, for each different weighting of AUC and ACC importance from 0AUC + 1ACC to 1AUC + 0ACC. It then outputs a table and CSV file so that you can sort each different weight, and thus finding the top performers for each weight.\
\
ConsensusResults_Analysis: Not sure how much help this will be. My partner ran the simulations according to results from LinCombAUCACC, and compiled the MATLAB output into an excel spreadsheet. This was my wrangling of the CSV file to understand our results. I read the table, parse the naming scheme below into [mean or median], [AUC weight], [top k methods included]. This helps with grouping. I then look at whether mean or median does better across all combinations. Mean did better, so I created a new data frame consisting of just mean combinations. Next I look at which AUC/ACC weight best determines top performers. And then how many top methods to include. These last findings show that the last two variations do not make much of a difference.\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\fs24 \cf0 A: mean\
B: median\
First number is the weight on AUC (10 is 1.0) and then last number is number of constituent methods
\fs30 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
======================================================================================\
\
AreaBtwnCurves.Rmd\
\
PREPROCESSING\
Ensure that a copy of this script, your original fMRI data, and all discretized fMRI data sets are in the same path.\
EDITS TO SCRIPT\
All changes are to be made in the chunk \'93Variable inputs\'94. Simply indicate the name of the original fMRI file, and whether or not the data is experimental data.\
NOTE\
Naming of all files involved is extremely important. See discretizationNamingDocumentation.\
\
\
\
ConsensusResults_Analysis.Rmd\
\
PREPROCESSING\

\b Erin please fill in how you did the MULAN calculations with consensus networks
\b0 \
EDITS TO SCRIPT\
All changes are to be made in the chunk \'93Variable inputs\'94. Simply fill in the path to the CSV file containing results from running MATLAB-MULAN.\
NOTE\
This is only a wrangling script\
}